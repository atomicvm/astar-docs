"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[5136],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,v=d["".concat(i,".").concat(m)]||d[m]||p[m]||s;return r?n.createElement(v,o(o({ref:t},u),{},{components:r})):n.createElement(v,o({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<s;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4549:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var n=r(7462),a=r(3366),s=(r(7294),r(3905)),o=["components"],c={sidebar_position:8},i="8. Launch Services",l={unversionedId:"nodes/ultimateguide/launch_services",id:"nodes/ultimateguide/launch_services",title:"8. Launch Services",description:"Launch Services",source:"@site/docs/nodes/ultimateguide/launch_services.md",sourceDirName:"nodes/ultimateguide",slug:"/nodes/ultimateguide/launch_services",permalink:"/astar-docs/docs/nodes/ultimateguide/launch_services",editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/nodes/ultimateguide/launch_services.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"7. Services",permalink:"/astar-docs/docs/nodes/ultimateguide/services"},next:{title:"9. Run Monitor Dashboard",permalink:"/astar-docs/docs/nodes/ultimateguide/start_monitoring"}},u={},p=[{value:"Launch Services",id:"launch-services",level:2},{value:'Test Alert manager <a href="#ac61" id="ac61"></a>',id:"test-alert-manager-",level:2}],d={toc:p};function m(e){var t=e.components,r=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"8-launch-services"},"8. Launch Services"),(0,s.kt)("h2",{id:"launch-services"},"Launch Services"),(0,s.kt)("p",null,"Launch a ",(0,s.kt)("strong",{parentName:"p"},"daemon reload")," to take the services into account in ",(0,s.kt)("inlineCode",{parentName:"p"},"systemd"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo systemctl daemon-reload\n")),(0,s.kt)("p",null,"Start the services:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo systemctl start prometheus.service\nsudo systemctl start node_exporter.service\nsudo systemctl start process-exporter.service\nsudo systemctl start alertmanager.service\nsudo systemctl start grafana-server\n")),(0,s.kt)("p",null,"And check that they are working fine, one by one:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"systemctl status prometheus.service\nsystemctl status node_exporter.service\nsystemctl status process-exporter.service\nsystemctl status alertmanager.service\nsystemctl status grafana-server\n")),(0,s.kt)("p",null,"A service working fine should look like this:"),(0,s.kt)("center",null,(0,s.kt)("img",{src:"https://i.imgur.com/GtgGvQd.png",border:"1"})),(0,s.kt)("p",null,"When everything is okay, activate the services!"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"sudo systemctl enable prometheus.service\nsudo systemctl enable node_exporter.service\nsudo systemctl enable process-exporter.service\nsudo systemctl enable alertmanager.service\nsudo systemctl enable grafana-server\n")),(0,s.kt)("h2",{id:"test-alert-manager-"},"Test Alert manager ",(0,s.kt)("a",{href:"#ac61",id:"ac61"})),(0,s.kt)("p",null,"Run this command to fire an alert:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'curl -H "Content-Type: application/json" -d \'[{"labels":{"alertname":"Test"}}]\' localhost:9093/api/v1/alerts\n')),(0,s.kt)("p",null,"Check your inbox, you have a surprise:"),(0,s.kt)("center",null,(0,s.kt)("img",{src:"https://i.imgur.com/WItIQ8a.png",border:"1"})),(0,s.kt)("p",null,"You will always receive a ",(0,s.kt)("strong",{parentName:"p"},"Firing")," alert first, then a ",(0,s.kt)("strong",{parentName:"p"},"Resolved")," notification to indicate the alert isn\u2019t active anymore."))}m.isMDXComponent=!0}}]);