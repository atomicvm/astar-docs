"use strict";(self.webpackChunkdocs_1=self.webpackChunkdocs_1||[]).push([[1449],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(a),m=r,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return a?n.createElement(h,l(l({ref:t},c),{},{components:a})):n.createElement(h,l({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},8215:function(e,t,a){a.d(t,{Z:function(){return r}});var n=a(7294);function r(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return c}});var n=a(7462),r=a(7294),o=a(2389),l=a(5979),i=a(6010),s="tabItem_LplD";function u(e){var t,a,o,u=e.lazy,c=e.block,d=e.defaultValue,p=e.values,m=e.groupId,h=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=p?p:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),f=(0,l.lx)(v,(function(e,t){return e.value===t.value}));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===d?d:null!=(t=null!=d?d:null==(a=k.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(o=k[0])?void 0:o.props.value;if(null!==g&&!v.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=(0,l.UB)(),y=b.tabGroupChoices,N=b.setTabGroupChoices,w=(0,r.useState)(g),O=w[0],C=w[1],E=[],T=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var x=y[m];null!=x&&x!==O&&v.some((function(e){return e.value===x}))&&C(x)}var A=function(e){var t=e.currentTarget,a=E.indexOf(t),n=v[a].value;n!==O&&(T(t),C(n),null!=m&&N(m,n))},L=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=E.indexOf(e.currentTarget)+1;a=E[n]||E[0];break;case"ArrowLeft":var r=E.indexOf(e.currentTarget)-1;a=E[r]||E[E.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":c},h)},v.map((function(e){var t=e.value,a=e.label,o=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:function(e){return E.push(e)},onKeyDown:L,onFocus:A,onClick:A},o,{className:(0,i.Z)("tabs__item",s,null==o?void 0:o.className,{"tabs__item--active":O===t})}),null!=a?a:t)}))),u?(0,r.cloneElement)(k.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}function c(e){var t=(0,o.Z)();return r.createElement(u,(0,n.Z)({key:String(t)},e))}},6652:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return d}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),l=(a(9877),a(8215),["components"]),i={sidebar_position:4},s="4. Building Your Collator",u={unversionedId:"nodes/ultimateguide/building_node",id:"nodes/ultimateguide/building_node",title:"4. Building Your Collator",description:"Let's get started",source:"@site/docs/nodes/ultimateguide/building_node.md",sourceDirName:"nodes/ultimateguide",slug:"/nodes/ultimateguide/building_node",permalink:"/astar-docs/docs/nodes/ultimateguide/building_node",editUrl:"https://github.com/AstarNetwork/astar-docs/tree/main/docs/nodes/ultimateguide/building_node.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"3. SSH Tunneling",permalink:"/astar-docs/docs/nodes/ultimateguide/ssh_tunneling"},next:{title:"5. Node Monitoring",permalink:"/astar-docs/docs/nodes/ultimateguide/node_monitoring"}},c={},d=[{value:"Let&#39;s get started",id:"lets-get-started",level:2},{value:"Build the node",id:"build-the-node",level:2},{value:"Build from source",id:"build-from-source",level:3},{value:"Build from binaries",id:"build-from-binaries",level:3},{value:"Run a Docker container",id:"run-a-docker-container",level:3},{value:"Launch Your Collator",id:"launch-your-collator",level:2},{value:"Set systemd service",id:"set-systemd-service",level:2},{value:"Relay Chain snapshot",id:"relay-chain-snapshot",level:2},{value:"Finalizing",id:"finalizing",level:2}],p={toc:d};function m(e){var t=e.components,a=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"4-building-your-collator"},"4. Building Your Collator"),(0,o.kt)("h2",{id:"lets-get-started"},"Let's get started"),(0,o.kt)("p",null,"Let's start with updating our server. Connect to your server and update:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo apt-get update\nsudo apt-get upgrade\nsudo apt install -y adduser libfontconfig1\n")),(0,o.kt)("h2",{id:"build-the-node"},"Build the node"),(0,o.kt)("p",null,"To build a collator node, you have 3 different options"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"From source"),": experience with using Linux"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"From binary"),": easiest way to start and update node with new releases"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Run a Docker container"),": Docker background requires")),(0,o.kt)("h3",{id:"build-from-source"},"Build from source"),(0,o.kt)("p",null,"Building a node from source code is the most complicated path, but will also provide the best optimized node version for your server."),(0,o.kt)("p",null,"Make sure your server is ready to build a collator:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'## Install Rust\n##\ncurl https://sh.rustup.rs -sSf | sh\nsource $HOME/.cargo/env\nrustup update nightly\nrustup target add wasm32-unknown-unknown --toolchain nightly\n\n## Compilation required software\n##\nbash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"\nsudo apt install cmake \nsudo apt install git \nsudo apt install build-essential\nsudo apt update\nsudo apt install clang\n')),(0,o.kt)("p",null,"Clone the Astar repository:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git clone https://github.com/AstarNetwork/Astar.git\ncd Astar\n")),(0,o.kt)("p",null,"Make sure you have the latest commit in place:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git checkout\ngit pull\n")),(0,o.kt)("p",null,"Compile the node binary:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'CARGO_PROFILE_RELEASE_LTO=true RUSTFLAGS="-C codegen-units=1" cargo build --release\n')),(0,o.kt)("h3",{id:"build-from-binaries"},"Build from binaries"),(0,o.kt)("p",null,"The easiest way to install an Astar node is to download the binaries. You can find them here: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/AstarNetwork/Astar"},"Astar releases")),(0,o.kt)("p",null,"Get the file and extract:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'wget $(curl -s https://api.github.com/repos/AstarNetwork/Astar/releases/latest | grep "tag_name" | awk \'{print "https://github.com/PlasmNetwork/Plasm/releases/download/" substr($2, 2, length($2)-3) "/astar-collator-" substr($2, 3, length($2)-4) "-ubuntu-x86_64.tar.gz"}\')\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"tar -xvf astar-collator*.tar.gz\n")),(0,o.kt)("h3",{id:"run-a-docker-container"},"Run a Docker container"),(0,o.kt)("p",null,"You can find here the ",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/staketechnologies/astar-collator"},"Astar Docker hub"),"."),(0,o.kt)("p",null,"Pull the latest Docker version"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker pull staketechnologies/astar-collator:latest\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"launch-your-collator"},"Launch Your Collator"),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The following steps are suitable for ",(0,o.kt)("strong",{parentName:"p"},"binary")," usage (built from source or downloaded).\nIn case you want to run a Docker container, you will have to adapt those."))),(0,o.kt)("p",null,"Create a dedicated user for the node and move the ",(0,o.kt)("strong",{parentName:"p"},"node binary"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo useradd --no-create-home --shell /usr/sbin/nologin astar\nsudo cp ./astar-collator /usr/local/bin\nchmod +x astar-collator*.tar.gz\n")),(0,o.kt)("p",null,"Create a dedicated directory for the ",(0,o.kt)("strong",{parentName:"p"},"chain storage data"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo mkdir /var/lib/astar\nsudo chown astar:astar /var/lib/astar\n")),(0,o.kt)("p",null,"Let's first go to our binary directory and start the collator manually:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd /usr/local/bin\n\n## Astar\n./astar-collator --validator --chain astar --parachain-id 2006 --name COLLATOR_NAME --rpc-cors all --base-path /var/lib/astar --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' --execution wasm --state-cache-size 1\n\n## Shiden\n./astar-collator --validator --chain shiden --name COLLATOR_NAME --rpc-cors all --base-path /var/lib/astar --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' --execution wasm --state-cache-size 1\n\n## Shibuya\n./astar-collator --validator --chain shibuya --parachain-id 1000 --name COLLATOR_NAME --rpc-cors all --base-path /var/lib/astar --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' --execution wasm --state-cache-size 1\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"s")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Type in the place of ",(0,o.kt)("strong",{parentName:"p"},"${COLLATOR","_","NAME}"),", how you would like to call your node."))),(0,o.kt)("p",null,"Check on ",(0,o.kt)("a",{parentName:"p",href:"https://telemetry.polkadot.io/#/Dusty"},"https://telemetry.polkadot.io/")," to see your node syncing."),(0,o.kt)("p",null,"Useful commands to be used in screen:\\\n",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"em"},"ctrl+a+d")," (detach actual session)"),"\\\n",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"em"},"screen ls")," (this will list all running screens)"),"\\\n",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"em"},"screen -r")," (restore a screen session)")),(0,o.kt)("p",null,"Stop the manual node and kill the screen session:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ctrl+c\nctrl+a+k\n")),(0,o.kt)("h2",{id:"set-systemd-service"},"Set systemd service"),(0,o.kt)("p",null,"To run a stable collator node, a ",(0,o.kt)("strong",{parentName:"p"},"systemd service")," has to be set and activated. This will ensure that the node is restarting even after a server reboot."),(0,o.kt)("p",null,"Create a service file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo nano /etc/systemd/system/astar.service\n")),(0,o.kt)("p",null,"Add service parameters (this example is for Astar Network):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"[Unit]\nDescription=Astar Collator\n\n[Service]\nUser=astar\nGroup=astar\n  \nExecStart=/usr/local/bin/astar-collator \\\n  --validator \\\n  --rpc-cors all \\\n  --name ${COLLATOR_NAME} \\\n  --chain astar \\\n  --parachain-id 2006 \\\n  --base-path /var/lib/astar \\\n  --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' \\\n  --execution wasm\\\n  --state-cache-size 1\n  \nRestart=always\nRestartSec=120\n\n[Install]\nWantedBy=multi-user.target\n")),(0,o.kt)("p",null,"Start the service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo systemctl start astar.service\n")),(0,o.kt)("p",null,"Check the node log and that everything is syncing fine:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"journalctl -f -u astar.service -n100\n")),(0,o.kt)("p",null,"Enable the service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo systemctl enable astar.service\n")),(0,o.kt)("h2",{id:"relay-chain-snapshot"},"Relay Chain snapshot"),(0,o.kt)("p",null,"If you run your collator it not only needs to sync the ",(0,o.kt)("strong",{parentName:"p"},"mainnet")," chain but also the complete relay chain from ",(0,o.kt)("strong",{parentName:"p"},"Kusama / Polkadot"),". This can take up to 3-4 days. You can also use a snapshot of Kusama/Polkadot. You can download this ",(0,o.kt)("a",{parentName:"p",href:"https://polkashots.io"},"here")," and will save a lot of time."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("strong",{parentName:"p"},"NOTE"),": know what you are doing when using snapshots!"))),(0,o.kt)("h2",{id:"finalizing"},"Finalizing"),(0,o.kt)("p",null,"To finalize your collator you need to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Setup an account"),(0,o.kt)("li",{parentName:"ul"},"Author your session key"),(0,o.kt)("li",{parentName:"ul"},"Set up your session key"),(0,o.kt)("li",{parentName:"ul"},"Verify your identity"),(0,o.kt)("li",{parentName:"ul"},"Bond tokens")))}m.isMDXComponent=!0}}]);